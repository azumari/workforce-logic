//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Workforce.Logic.Felice.Domain.WorkforceServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AssociateDao", Namespace="http://schemas.datacontract.org/2004/07/Workforce.Data.Felice.Soap.ServiceModels")]
    [System.SerializableAttribute()]
    public partial class AssociateDao : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AssociateIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BatchIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CarField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DateOfBirthField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int GenderIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool HasKeysField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhoneNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> isComingField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Active {
            get {
                return this.ActiveField;
            }
            set {
                if ((this.ActiveField.Equals(value) != true)) {
                    this.ActiveField = value;
                    this.RaisePropertyChanged("Active");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AssociateID {
            get {
                return this.AssociateIDField;
            }
            set {
                if ((this.AssociateIDField.Equals(value) != true)) {
                    this.AssociateIDField = value;
                    this.RaisePropertyChanged("AssociateID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BatchID {
            get {
                return this.BatchIDField;
            }
            set {
                if ((this.BatchIDField.Equals(value) != true)) {
                    this.BatchIDField = value;
                    this.RaisePropertyChanged("BatchID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Car {
            get {
                return this.CarField;
            }
            set {
                if ((this.CarField.Equals(value) != true)) {
                    this.CarField = value;
                    this.RaisePropertyChanged("Car");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DateOfBirth {
            get {
                return this.DateOfBirthField;
            }
            set {
                if ((this.DateOfBirthField.Equals(value) != true)) {
                    this.DateOfBirthField = value;
                    this.RaisePropertyChanged("DateOfBirth");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int GenderID {
            get {
                return this.GenderIDField;
            }
            set {
                if ((this.GenderIDField.Equals(value) != true)) {
                    this.GenderIDField = value;
                    this.RaisePropertyChanged("GenderID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool HasKeys {
            get {
                return this.HasKeysField;
            }
            set {
                if ((this.HasKeysField.Equals(value) != true)) {
                    this.HasKeysField = value;
                    this.RaisePropertyChanged("HasKeys");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PhoneNumber {
            get {
                return this.PhoneNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneNumberField, value) != true)) {
                    this.PhoneNumberField = value;
                    this.RaisePropertyChanged("PhoneNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> isComing {
            get {
                return this.isComingField;
            }
            set {
                if ((this.isComingField.Equals(value) != true)) {
                    this.isComingField = value;
                    this.RaisePropertyChanged("isComing");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="WorkforceServiceReference.IFeliceService")]
    public interface IFeliceService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFeliceService/GetAssociates", ReplyAction="http://tempuri.org/IFeliceService/GetAssociatesResponse")]
        Workforce.Logic.Felice.Domain.WorkforceServiceReference.AssociateDao[] GetAssociates();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFeliceService/GetAssociates", ReplyAction="http://tempuri.org/IFeliceService/GetAssociatesResponse")]
        System.Threading.Tasks.Task<Workforce.Logic.Felice.Domain.WorkforceServiceReference.AssociateDao[]> GetAssociatesAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IFeliceServiceChannel : Workforce.Logic.Felice.Domain.WorkforceServiceReference.IFeliceService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class FeliceServiceClient : System.ServiceModel.ClientBase<Workforce.Logic.Felice.Domain.WorkforceServiceReference.IFeliceService>, Workforce.Logic.Felice.Domain.WorkforceServiceReference.IFeliceService {
        
        public FeliceServiceClient() {
        }
        
        public FeliceServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public FeliceServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public FeliceServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public FeliceServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Workforce.Logic.Felice.Domain.WorkforceServiceReference.AssociateDao[] GetAssociates() {
            return base.Channel.GetAssociates();
        }
        
        public System.Threading.Tasks.Task<Workforce.Logic.Felice.Domain.WorkforceServiceReference.AssociateDao[]> GetAssociatesAsync() {
            return base.Channel.GetAssociatesAsync();
        }
    }
}
